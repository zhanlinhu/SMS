<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sms.dao.NoticeDao">
  <resultMap id="BaseResultMap" type="com.sms.entity.Notice">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="title" property="title" />
    <result column="author" property="author" />
    <result column="content" property="content" />
    <result column="auth" property="auth" />
    <result column="newstime" jdbcType="DATE" property="newstime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, title, author, content, auth, newstime
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_notice
    where id = #{id}
  </select>
  
  <!-- &lt;小于号       &gt;大于号   -->
  <select id="getTotalItemsCount" resultType="java.lang.Integer">
    select count(*) from t_notice
    where auth &lt;= #{param1}
    <if test="param2 != null and param2 != '' ">
    	and title like CONCAT('%', #{param2}, '%')
    </if>
  </select>
  <select id="getNotice" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_notice
    where auth &lt;= #{param2}
    <if test="param3 != null and param3 != '' ">
    	and title like CONCAT('%', #{param3}, '%')
    </if>
    <if test="param1 != null">
  		limit #{param1.start}, #{param1.pageSize}
  	</if>
  </select>
  
  <delete id="deleteBatch" parameterType="java.lang.Integer">
    delete from t_notice
    where id in
    <foreach collection="list" item="id" separator="," open="(" close=")" >
    	#{id}
    </foreach>
  </delete>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_notice
    where id = #{id}
  </delete>
  <insert id="insert" parameterType="com.sms.entity.Notice">
    insert into t_notice (id, title, author, 
      content, auth, newstime)
    values (#{id}, #{title}, #{author},
      #{content}, #{auth}, CURDATE())
  </insert>
  <insert id="insertSelective" parameterType="com.sms.entity.Notice">
    insert into t_notice
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="author != null">
        author,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="auth != null">
        auth,
      </if>
      <if test="newstime != null">
        newstime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id},
      </if>
      <if test="title != null">
        #{title},
      </if>
      <if test="author != null">
        #{author},
      </if>
      <if test="content != null">
        #{content},
      </if>
      <if test="auth != null">
        #{auth},
      </if>
      <if test="newstime != null">
        #{newstime}
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sms.entity.Notice">
    update t_notice
    <set>
      <if test="title != null">
        title = #{title},
      </if>
      <if test="author != null">
        author = #{author},
      </if>
      <if test="content != null">
        content = #{content},
      </if>
      <if test="auth != null">
        auth = #{auth},
      </if>
        newstime = CURDATE(),
    </set>
    where id = #{id}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sms.entity.Notice">
    update t_notice
    set title = #{title},
      author = #{author},
      content = #{content},
      auth = #{auth},
      newstime = CURDATE()
    where id = #{id}
  </update>
</mapper>