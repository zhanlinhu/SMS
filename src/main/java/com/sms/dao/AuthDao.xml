<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sms.dao.AuthDao">
  <resultMap id="BaseResultMap" type="com.sms.entity.Auth">
    <id column="id" property="id" />
    <result column="name" property="name" />
    <result column="url" property="url" />
    <result column="admin_auth" property="adminAuth" />
    <result column="teacher_auth" property="teacherAuth" />
    <result column="student_auth"  property="studentAuth" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, url, admin_auth, teacher_auth, student_auth
  </sql>
  
  
  <select id="getTotalItemsCount" parameterType="java.lang.String" resultType="java.lang.Integer">
  	select count(*) from t_auth
  	<where>
  		<if test="_parameter != null and _parameter != '' ">
  			name like CONCAT('%', #{searchKey}, '%')
  		</if>
  	</where>
  </select>
  
  <select id="getAuthList" resultMap="BaseResultMap">
  	select * from t_auth
  	<where>
  		<if test="param2 != null and param2 != '' ">
  			name like CONCAT('%', #{searchKey}, '%')
  		</if>
  	</where>
  	<if test="param1 != null">
  		limit #{param1.start}, #{param1.pageSize}
  	</if>
  </select>
  
  
  <select id="selectUrl" parameterType="java.lang.String" resultMap="BaseResultMap">
    select url from t_auth where
    <choose>
    	<when test="_parameter == 'admin'">
    		admin_auth = 1
    	</when>
    	<when test="_parameter == 'teacher'">
    		teacher_auth = 1
    	</when>
    	<when test="_parameter == 'student'">
    		student_auth = 1
    	</when>
    	<otherwise>
    		1 = 0
    	</otherwise>
    </choose>
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_auth
    where id = #{id}
  </delete>
  <insert id="insert" parameterType="com.sms.entity.Auth">
    insert into t_auth (id, name, url, 
      admin_auth, teacher_auth, student_auth
      )
    values (#{id}, #{name}, #{url},
      #{adminAuth}, #{teacherAuth}, #{studentAuth}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.sms.entity.Auth">
    insert into t_auth
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="adminAuth != null">
        admin_auth,
      </if>
      <if test="teacherAuth != null">
        teacher_auth,
      </if>
      <if test="studentAuth != null">
        student_auth,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id},
      </if>
      <if test="name != null">
        #{name},
      </if>
      <if test="url != null">
        #{url},
      </if>
      <if test="adminAuth != null">
        #{adminAuth},
      </if>
      <if test="teacherAuth != null">
        #{teacherAuth},
      </if>
      <if test="studentAuth != null">
        #{studentAuth},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sms.entity.Auth">
    update t_auth
    <set>
      <if test="name != null">
        name = #{name},
      </if>
      <if test="url != null">
        url = #{url},
      </if>
      <if test="adminAuth != null">
        admin_auth = #{adminAuth},
      </if>
      <if test="teacherAuth != null">
        teacher_auth = #{teacherAuth},
      </if>
      <if test="studentAuth != null">
        student_auth = #{studentAuth},
      </if>
    </set>
    where id = #{id}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sms.entity.Auth">
    update t_auth
    set name = #{name},
      url = #{url},
      admin_auth = #{adminAuth},
      teacher_auth = #{teacherAuth},
      student_auth = #{studentAuth}
    where id = #{id}
  </update>
</mapper>